// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tape.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	tape.proto

It has these top-level messages:
	Location
	Volume
	StatusRequest
	StatusResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// the volume category
type Volume_Category int32

const (
	Volume_UNKNOWN    Volume_Category = 0
	Volume_ALLOCATING Volume_Category = 1
	Volume_FILLING    Volume_Category = 2
	Volume_SCRATCH    Volume_Category = 3
	Volume_FULL       Volume_Category = 4
	Volume_MISSING    Volume_Category = 5
	Volume_DAMAGED    Volume_Category = 6
	Volume_CLEANING   Volume_Category = 7
)

var Volume_Category_name = map[int32]string{
	0: "UNKNOWN",
	1: "ALLOCATING",
	2: "FILLING",
	3: "SCRATCH",
	4: "FULL",
	5: "MISSING",
	6: "DAMAGED",
	7: "CLEANING",
}
var Volume_Category_value = map[string]int32{
	"UNKNOWN":    0,
	"ALLOCATING": 1,
	"FILLING":    2,
	"SCRATCH":    3,
	"FULL":       4,
	"MISSING":    5,
	"DAMAGED":    6,
	"CLEANING":   7,
}

func (x Volume_Category) String() string {
	return proto1.EnumName(Volume_Category_name, int32(x))
}
func (Volume_Category) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

// Location represents a location in a tape library
type Location struct {
	Addr     int64  `protobuf:"varint,1,opt,name=addr" json:"addr,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category" json:"category,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto1.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Location) GetAddr() int64 {
	if m != nil {
		return m.Addr
	}
	return 0
}

func (m *Location) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

// Volumes represents a tape library volume.
type Volume struct {
	// serial is the volume serial (VOLSER)
	Serial string `protobuf:"bytes,1,opt,name=serial" json:"serial,omitempty"`
	// location is the current location (e.g. (0, transfer), indicating
	// the volume is loaded into the first transfer element)
	Location *Location `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	// if currently mounted, home holds the home storage location.
	Home     *Location       `protobuf:"bytes,3,opt,name=home" json:"home,omitempty"`
	Category Volume_Category `protobuf:"varint,4,opt,name=category,enum=proto.Volume_Category" json:"category,omitempty"`
	// implementation specific volume flags
	Flags uint32 `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto1.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Volume) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *Volume) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Volume) GetHome() *Location {
	if m != nil {
		return m.Home
	}
	return nil
}

func (m *Volume) GetCategory() Volume_Category {
	if m != nil {
		return m.Category
	}
	return Volume_UNKNOWN
}

func (m *Volume) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type StatusRequest struct {
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto1.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type StatusResponse struct {
	Volumes []*Volume `protobuf:"bytes,1,rep,name=volumes" json:"volumes,omitempty"`
	Error   []byte    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto1.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StatusResponse) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *StatusResponse) GetError() []byte {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto1.RegisterType((*Location)(nil), "proto.Location")
	proto1.RegisterType((*Volume)(nil), "proto.Volume")
	proto1.RegisterType((*StatusRequest)(nil), "proto.StatusRequest")
	proto1.RegisterType((*StatusResponse)(nil), "proto.StatusResponse")
	proto1.RegisterEnum("proto.Volume_Category", Volume_Category_name, Volume_Category_value)
}

func init() { proto1.RegisterFile("tape.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xdb, 0x4f, 0xc2, 0x30,
	0x14, 0xc6, 0x1d, 0xbb, 0x30, 0x0e, 0xb7, 0xa5, 0x31, 0x64, 0xf1, 0x69, 0x99, 0x0f, 0x2e, 0x31,
	0xe1, 0x61, 0xbe, 0xf9, 0xb6, 0x8c, 0x8b, 0xc4, 0x32, 0x92, 0x0e, 0xf4, 0x79, 0x42, 0x45, 0x92,
	0x41, 0x71, 0x2d, 0x26, 0xfe, 0x59, 0xfe, 0x87, 0xa6, 0xdd, 0x86, 0x9a, 0xf8, 0xd4, 0xfe, 0xce,
	0xf7, 0x9d, 0x9e, 0xf3, 0x15, 0x40, 0x64, 0x47, 0x3a, 0x3c, 0x16, 0x4c, 0x30, 0x64, 0xaa, 0xc3,
	0xbf, 0x07, 0x1b, 0xb3, 0x75, 0x26, 0x76, 0xec, 0x80, 0x10, 0x18, 0xd9, 0x66, 0x53, 0xb8, 0x9a,
	0xa7, 0x05, 0x3a, 0x51, 0x77, 0x74, 0x05, 0xf6, 0x3a, 0x13, 0x74, 0xcb, 0x8a, 0x4f, 0xb7, 0xe1,
	0x69, 0x41, 0x8b, 0x9c, 0xd9, 0xff, 0x6a, 0x80, 0xf5, 0xc4, 0xf2, 0xd3, 0x9e, 0xa2, 0x01, 0x58,
	0x9c, 0x16, 0xbb, 0x2c, 0x57, 0xcd, 0x2d, 0x52, 0x11, 0xba, 0x05, 0x3b, 0xaf, 0x9e, 0x57, 0xed,
	0xed, 0xb0, 0x5f, 0xce, 0x1f, 0xd6, 0x53, 0xc9, 0xd9, 0x80, 0xae, 0xc1, 0x78, 0x63, 0x7b, 0xea,
	0xea, 0xff, 0x1b, 0x95, 0x88, 0xc2, 0x5f, 0x0b, 0x19, 0x9e, 0x16, 0xf4, 0xc2, 0x41, 0x65, 0x2c,
	0x57, 0x19, 0xc6, 0x95, 0xfa, 0xb3, 0x28, 0xba, 0x04, 0xf3, 0x35, 0xcf, 0xb6, 0xdc, 0x35, 0x3d,
	0x2d, 0xe8, 0x92, 0x12, 0x7c, 0x0e, 0x76, 0xed, 0x45, 0x6d, 0x68, 0xae, 0x92, 0xc7, 0x64, 0xf1,
	0x9c, 0x38, 0x17, 0xa8, 0x07, 0x10, 0x61, 0xbc, 0x88, 0xa3, 0xe5, 0x2c, 0x99, 0x3a, 0x9a, 0x14,
	0x27, 0x33, 0x8c, 0x25, 0x34, 0x24, 0xa4, 0x31, 0x89, 0x96, 0xf1, 0x83, 0xa3, 0x23, 0x1b, 0x8c,
	0xc9, 0x0a, 0x63, 0xc7, 0x90, 0xe5, 0xf9, 0x2c, 0x4d, 0xa5, 0xc7, 0x94, 0x30, 0x8a, 0xe6, 0xd1,
	0x74, 0x3c, 0x72, 0x2c, 0xd4, 0x01, 0x3b, 0xc6, 0xe3, 0x28, 0x91, 0x52, 0xd3, 0xef, 0x43, 0x37,
	0x15, 0x99, 0x38, 0x71, 0x42, 0xdf, 0x4f, 0x94, 0x0b, 0x7f, 0x01, 0xbd, 0xba, 0xc0, 0x8f, 0xec,
	0xc0, 0x29, 0xba, 0x81, 0xe6, 0x87, 0x8a, 0xc2, 0x5d, 0xcd, 0xd3, 0x83, 0x76, 0xd8, 0xfd, 0x13,
	0x90, 0xd4, 0xaa, 0x8c, 0x45, 0x8b, 0x82, 0x15, 0xea, 0x67, 0x3b, 0xa4, 0x84, 0x17, 0x4b, 0x99,
	0xef, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x66, 0xd0, 0x31, 0x47, 0xed, 0x01, 0x00, 0x00,
}
